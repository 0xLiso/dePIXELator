void fn16CC_001C(segptr32 ptrArg04, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1744_044D
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO bx eax Top
// Preserved: bp ds ecx edi edx es esi fs gs sp
fn16CC_001C_entry:
	word16 esi_16_16_272 = SLICE(esi, word16, 16)
	word16 wArg04_789 = SLICE(ptrArg04, word16, 0)
l16CC_001C:
	Mem43[ptrArg04 + 0x1A<16>:word16] = Mem35[ptrArg04 + 0x1A<16>:word16] | 2<16>
	word32 edx_48 = Mem43[Mem43[ptrArg04 + 0x10<16>:word16]:Mem43[ptrArg04 + 0xE<16>:word16]:word32]
	word16 ax_57 = Mem43[ptrArg04 + 6<16>:word16]
	Mem58[ptrArg04 + 2<16>:word16] = ax_57
	word16 dx_49 = SLICE(edx_48, word16, 0)
	selector fs_40 = SLICE(ptrArg04, selector, 16)
	word16 si_279 = SLICE(ptrArg04, word16, 0)
	byte dl_169 = SLICE(dx_49 >>u 1<16>, byte, 0)
	byte cl_55 = SLICE(SEQ(SLICE(edx_48, word16, 16), dx_49 >>u 1<16>) >>u 0x10<32>, byte, 0)
	byte al_74 = SLICE(ax_57, byte, 0)
	branch ax_57 >=u Mem58[16CC:0010:word16] l16CC_006C
l16CC_0068:
	Mem61[16CC:0010:word16] = ax_57
l16CC_006C:
	word16 bx_67 = CONVERT(cl_55, byte, uint16) + ax_57
	branch bx_67 <u Mem68[16CC:0014:word16] l16CC_007E
l16CC_0079:
	Mem71[16CC:0014:word16] = bx_67
l16CC_007E:
	word16 bx_88 = Mem87[ptrArg04 + 4<16>:word16]
	Mem89[ptrArg04:word16] = bx_88
	word16 ax_82 = (ax_57 << 6<16>) + SEQ(al_74, 0<8>)
	branch bx_88 >=u Mem89[16CC:000E:word16] l16CC_009A
l16CC_0095:
	Mem92[16CC:000E:word16] = bx_88
l16CC_009A:
	word16 cx_102 = (CONVERT(dl_169, byte, uint16) << 1<16>) + bx_88
	branch cx_102 <u Mem103[16CC:0012:word16] l16CC_00AE
l16CC_00A9:
	Mem106[16CC:0012:word16] = cx_102
l16CC_00AE:
	Mem111[16CC:000A:word16] = ax_82 + bx_88
	branch (Mem111[ptrArg04 + 0x1A<16>:word16] & 4<16>) == 0<16> l16CC_014B
l16CC_00BF:
	word32 eax_121 = Mem111[ptrArg04 + 0x12<16>:word32]
	word16 ax_122 = SLICE(eax_121, word16, 0)
	word16 ax_125 = SLICE(eax_121 >>u 0x10<32>, word16, 0)
	Mem139[ax_125:ax_122:word32] = SEQ(SLICE(SEQ(SLICE(eax_121 >>u 0x10<32>, word16, 16), 0<8>, cl_55) << 0x10<32>, word24, 8), dl_169)
	word16 di_140 = ax_122 + 4<16>
	word16 ax_154 = Mem139[wArg0A:wArg08 + 0xE<16>:word16]
	byte bl_157 = cl_55
	byte ch_668 = 0<8>
	word16 ax_163 = CONVERT(0xA0<8> - dl_169, byte, uint16)
	word16 si_165 = Mem139[wArg0A:wArg08 + 0xC<16>:word16] + Mem139[16CC:000A:word16]
	branch (si_165 & 1<16>) != 0<16> l16CC_010C
l16CC_010C:
	dl_169 = dl_169 - 1<8>
	branch dl_169 != 1<8> l16CC_0119
l16CC_0119:
	Mem178[ax_125:di_140:byte] = Mem174[ax_154:si_165:byte]
	word16 si_179 = si_165 + 1<i16>
	word16 di_180 = di_140 + 1<i16>
	word16 cx_183 = SEQ(ch_668, dl_169 - 1<8>)
l16CC_011C:
	ch_668 = SLICE(cx_183, byte, 8) (alias)
	branch cx_183 == 0<16> l16CC_011E
l16CC_011E:
	Mem190[ax_125:di_180:byte] = Mem186[ax_154:si_179:byte]
	di_140 = di_180 + 1<i16>
	si_165 = si_179 + 1<i16> + ax_163 * 2<16>
	bl_157 = bl_157 - 1<8>
	branch bl_157 != 0<8> l16CC_0119
l16CC_0125:
l16CC_011C_1:
	Mem204[ax_125:di_180:word16] = Mem186[ax_154:si_179:word16]
	si_179 = si_179 + 2<i16>
	di_180 = di_180 + 2<i16>
	cx_183 = cx_183 - 1<16>
l16CC_0110:
	Mem214[ax_125:di_140:word16] = Mem210[ax_154:si_165:word16]
	di_140 = di_140 + 2<i16>
	si_165 = si_165 + 2<i16> + ax_163 * 2<16>
	bl_157 = bl_157 - 1<8>
	branch bl_157 != 0<8> l16CC_0110
l16CC_0117:
l16CC_0100:
	word16 cx_226 = SEQ(ch_668, dl_169)
l16CC_0102:
	ch_668 = SLICE(cx_226, byte, 8) (alias)
	branch cx_226 == 0<16> l16CC_0104
l16CC_0104:
	si_165 = si_165 + ax_163 * 2<16>
	bl_157 = bl_157 - 1<8>
	branch bl_157 != 0<8> l16CC_0100
l16CC_010A:
l16CC_0127:
	byte bl_253 = Mem245[wArg0A:wArg08 + 0x10<16>:byte]
	Mem282[wArg0A:(CONVERT(bl_253, byte, uint16) << 2<16>) + 0x12<16> + wArg08:word32] = SEQ(SEQ(esi_16_16_272, fs_40), wArg04_789)
	Mem283[wArg0A:wArg08 + 0x10<16>:byte] = bl_253 + 1<8>
	si_279 = wArg04_789
l16CC_014B:
	word16 di_293 = Mem286[16CC:000A:word16] + Mem286[wArg0A:wArg08 + 0xC<16>:word16]
	word16 cx_294 = Mem286[wArg0A:wArg08 + 0xE<16>:word16]
	word16 cx_296 = Mem286[fs_40:si_279 + 0x10<16>:word16]
	byte bl_305 = cl_55
	word16 si_306 = Mem286[fs_40:si_279 + 0xE<16>:word16] + 4<16>
	branch (Mem286[fs_40:si_279 + 0x1A<16>:word16] & 0x20<16>) == 0<16> l16CC_026B
l16CC_026B:
	word16 ax_318 = CONVERT(0xA0<8> - dl_169, byte, uint16)
	byte ch_688 = 0<8>
	branch (di_293 & 1<16>) != 0<16> l16CC_0286
l16CC_0286:
	byte dl_324 = dl_169 - 1<8>
	branch dl_324 != 0<8> l16CC_0293
l16CC_0293:
	Mem333[cx_294:di_293:byte] = Mem329[cx_296:si_306:byte]
	word16 si_334 = si_306 + 1<i16>
	word16 di_335 = di_293 + 1<i16>
	word16 cx_338 = SEQ(ch_688, dl_324)
l16CC_0296:
	ch_688 = SLICE(cx_338, byte, 8) (alias)
	branch cx_338 == 0<16> l16CC_0298
l16CC_0298:
	Mem345[cx_294:di_335:byte] = Mem341[cx_296:si_334:byte]
	si_306 = si_334 + 1<i16>
	di_293 = di_335 + 1<i16> + ax_318 * 2<16>
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_0293
l16CC_0296_1:
	Mem356[cx_294:di_335:word16] = Mem341[cx_296:si_334:word16]
	si_334 = si_334 + 2<i16>
	di_335 = di_335 + 2<i16>
	cx_338 = cx_338 - 1<16>
l16CC_028A:
	Mem366[cx_294:di_293:word16] = Mem362[cx_296:si_306:word16]
	si_306 = si_306 + 2<i16>
	di_293 = di_293 + 2<i16> + ax_318 * 2<16>
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_028A
l16CC_0291:
l16CC_027A:
	word16 cx_378 = SEQ(ch_688, dl_169)
l16CC_027C:
	ch_688 = SLICE(cx_378, byte, 8) (alias)
	branch cx_378 == 0<16> l16CC_027E
l16CC_027E:
	di_293 = di_293 + ax_318 * 2<16>
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_027A
l16CC_0284:
l16CC_027C_1:
	Mem392[cx_294:di_293:word16] = Mem389[cx_296:si_306:word16]
	si_306 = si_306 + 2<i16>
	di_293 = di_293 + 2<i16>
	cx_378 = cx_378 - 1<16>
l16CC_0177:
	word16 ax_400 = CONVERT(0xA0<8> - dl_169, byte, uint16)
	byte ch_728 = 0<8>
	branch (di_293 & 1<16>) != 0<16> l16CC_01DF
l16CC_01DF:
	byte dl_407 = dl_169 - 1<8>
	word16 bp_408 = ax_400 * 2<16> + 1<16>
l16CC_01E2:
	byte al_415 = Mem414[cx_296:si_306:byte]
	word16 si_416 = si_306 + 1<16>
	word16 cx_444 = SEQ(ch_728, dl_407)
	branch al_415 == 0<8> l16CC_01EE
l16CC_01EB:
	Mem423[cx_294:di_293:byte] = al_415
l16CC_01EE:
	word16 di_425 = di_293 + 1<16>
l16CC_01EF:
	word16 ax_430 = Mem429[cx_296:si_416:word16]
	byte ah_432 = SLICE(ax_430, byte, 8)
	byte al_436 = SLICE(ax_430, byte, 0)
	si_416 = si_416 + 2<16>
	branch ah_432 == 0<8> l16CC_01FE
l16CC_01FE:
	branch ah_432 != al_436 l16CC_021A
l16CC_021A:
	Mem441[cx_294:di_425:byte] = al_436
	cx_444 = cx_444 - 1<16>
	di_425 = di_425 + 2<16>
	ch_728 = SLICE(cx_444, byte, 8) (alias)
	branch cx_444 != 0<16> l16CC_01EF
l16CC_0222:
	byte al_446 = Mem441[cx_296:si_416:byte]
	si_306 = si_416 + 1<16>
	branch al_446 == 0<8> l16CC_022C
l16CC_0229:
	Mem452[cx_294:di_425:byte] = al_446
l16CC_022C:
	di_293 = di_425 + bp_408
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_01E2
l16CC_0232:
l16CC_0202:
	cx_444 = cx_444 - 1<16>
	di_425 = di_425 + 2<16>
	ch_728 = SLICE(cx_444, byte, 8) (alias)
	branch cx_444 != 0<16> l16CC_01EF
l16CC_0207:
	byte al_466 = Mem429[cx_296:si_416:byte]
	si_306 = si_416 + 1<16>
	branch al_466 == 0<8> l16CC_0211
l16CC_020E:
	Mem472[cx_294:di_425:byte] = al_466
l16CC_0211:
	di_293 = di_425 + bp_408
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_01E2
l16CC_0217:
l16CC_01F8:
	branch al_436 != 0<8> l16CC_024F
l16CC_024F:
	Mem484[cx_294:di_425:word16] = ax_430
	cx_444 = cx_444 - 1<16>
	di_425 = di_425 + 2<16>
	ch_728 = SLICE(cx_444, byte, 8) (alias)
	branch cx_444 != 0<16> l16CC_01EF
l16CC_0257:
	byte al_488 = Mem484[cx_296:si_416:byte]
	si_306 = si_416 + 1<16>
	branch al_488 == 0<8> l16CC_0261
l16CC_025E:
	Mem494[cx_294:di_425:byte] = al_488
l16CC_0261:
	di_293 = di_425 + bp_408
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_01E2
l16CC_0269:
l16CC_01FC:
l16CC_0234:
	Mem503[cx_294:di_425 + 1<16>:byte] = ah_432
	cx_444 = cx_444 - 1<16>
	di_425 = di_425 + 2<16>
	ch_728 = SLICE(cx_444, byte, 8) (alias)
	branch cx_444 != 0<16> l16CC_01EF
l16CC_023D:
	byte al_507 = Mem503[cx_296:si_416:byte]
	si_306 = si_416 + 1<16>
	branch al_507 == 0<8> l16CC_0247
l16CC_0244:
	Mem513[cx_294:di_425:byte] = al_507
l16CC_0247:
	di_293 = di_425 + bp_408
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_01E2
l16CC_024D:
l16CC_0188:
	word16 cx_541 = SEQ(ch_728, dl_169)
l16CC_018A:
	word16 ax_527 = Mem526[cx_296:si_306:word16]
	byte ah_529 = SLICE(ax_527, byte, 8)
	byte al_533 = SLICE(ax_527, byte, 0)
	si_306 = si_306 + 2<16>
	branch ah_529 == 0<8> l16CC_0199
l16CC_0199:
	branch ah_529 != al_533 l16CC_01AB
l16CC_01AB:
	Mem538[cx_294:di_293:byte] = al_533
	cx_541 = cx_541 - 1<16>
	di_293 = di_293 + 2<16>
	ch_728 = SLICE(cx_541, byte, 8) (alias)
	branch cx_541 != 0<16> l16CC_018A
l16CC_01B3:
	di_293 = di_293 + ax_400 * 2<16>
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_0188
l16CC_01B9:
l16CC_019D:
	cx_541 = cx_541 - 1<16>
	di_293 = di_293 + 2<16>
	ch_728 = SLICE(cx_541, byte, 8) (alias)
	branch cx_541 != 0<16> l16CC_018A
l16CC_01A2:
	di_293 = di_293 + ax_400 * 2<16>
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_0188
l16CC_01A8:
l16CC_0193:
	branch al_533 != 0<8> l16CC_01CE
l16CC_01CE:
	Mem561[cx_294:di_293:word16] = ax_527
	cx_541 = cx_541 - 1<16>
	di_293 = di_293 + 2<16>
	ch_728 = SLICE(cx_541, byte, 8) (alias)
	branch cx_541 != 0<16> l16CC_018A
l16CC_01D6:
	di_293 = di_293 + ax_400 * 2<16>
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_0188
l16CC_01DC:
l16CC_0197:
l16CC_01BC:
	Mem570[cx_294:di_293 + 1<16>:byte] = ah_529
	cx_541 = cx_541 - 1<16>
	di_293 = di_293 + 2<16>
	ch_728 = SLICE(cx_541, byte, 8) (alias)
	branch cx_541 != 0<16> l16CC_018A
l16CC_01C5:
	di_293 = di_293 + ax_400 * 2<16>
	bl_305 = bl_305 - 1<8>
	branch bl_305 != 0<8> l16CC_0188
l16CC_01CB:
l16CC_029F:
	return
fn16CC_001C_exit:
l16CC_0102_1:
	Mem664[ax_125:di_140:word16] = Mem246[ax_154:si_165:word16]
	si_165 = si_165 + 2<i16>
	di_140 = di_140 + 2<i16>
	cx_226 = cx_226 - 1<16>


void fn16CC_02B2(segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1744_044D
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZDO bx eax Top
// Preserved: bp ds ecx edi edx es esi fs gs sp
fn16CC_02B2_entry:
	word16 ecx_16_16_250 = SLICE(ecx, word16, 16)
l16CC_02B2:
	word16 si_38 = SLICE(ptrArg04, word16, 0)
	Mem39[16CC:001A:word16] = si_38
	word16 bx_41 = Mem39[ptrArg04 + 0x10<16>:word16]
	Mem42[ptrArg04 + 0x10<16>:word16] = 0<16>
	ptr32 es_di_43 = Mem42[ptrArg04 + 0xC<16>:segptr32]
	word16 di_111 = SLICE(es_di_43, word16, 0)
	Mem45[16CC:000C:word16] = di_111
	selector fs_40 = SLICE(ptrArg04, selector, 16)
	selector es_354 = SLICE(es_di_43, selector, 16)
	word16 bx_290 = bx_41 << 2<16>
	word16 si_187 = si_38 + 0x12<16>
l16CC_02EC:
	ptr32 ds_si_54 = Mem53[fs_40:bx_290 - 4<16> + si_187:segptr32]
	word16 dx_58 = Mem53[ds_si_54 + 2<16>:word16]
	ptr32 ds_si_59 = Mem53[ds_si_54 + 0x12<16>:segptr32]
	word16 ax_57 = Mem53[ds_si_54:word16]
	byte dl_94 = SLICE(dx_58, byte, 0)
	selector ds_66 = SLICE(ds_si_59, selector, 16)
	word16 si_68 = SLICE(ds_si_59, word16, 0)
	branch ax_57 >=u Mem53[16CC:000E:word16] l16CC_0303
l16CC_02FF:
	Mem62[16CC:000E:word16] = ax_57
l16CC_0303:
	word16 cx_71 = ax_57 + Mem69[ds_si_59:word16] + Mem69[ds_si_59:word16]
	branch cx_71 <u Mem69[16CC:0012:word16] l16CC_0315
l16CC_0310:
	Mem74[16CC:0012:word16] = cx_71
l16CC_0315:
	branch dx_58 >=u Mem77[16CC:0010:word16] l16CC_0321
l16CC_031C:
	Mem80[16CC:0010:word16] = dx_58
l16CC_0321:
	word16 cx_88 = dx_58 + Mem87[ds_si_59 + 2<16>:word16]
	branch cx_88 <u Mem87[16CC:0014:word16] l16CC_0332
l16CC_032D:
	Mem91[16CC:0014:word16] = cx_88
l16CC_0332:
	byte al_123 = Mem115[ds_si_59:byte]
	word16 di_112 = di_111 + ((SEQ(dl_94, 0<8>) + (dx_58 << 6<16>)) + ax_57)
	word16 si_118 = si_68 + 4<16>
	byte ah_120 = Mem115[ds_si_59 + 2<16>:byte]
	word16 dx_126 = CONVERT(0xA0<8> - al_123, byte, uint16)
	byte ch_361 = 0<8>
	branch (di_112 & 1<16>) != 0<16> l16CC_0364
l16CC_0364:
l16CC_0366:
	Mem140[es_354:di_112:byte] = Mem136[ds_66:si_118:byte]
	word16 si_141 = si_118 + 1<i16>
	word16 di_142 = di_112 + 1<i16>
	word16 cx_145 = SEQ(ch_361, al_123 - 1<8>)
l16CC_0369:
	ch_361 = SLICE(cx_145, byte, 8) (alias)
	branch cx_145 == 0<16> l16CC_036B
l16CC_036B:
	Mem152[es_354:di_142:byte] = Mem148[ds_66:si_141:byte]
	si_118 = si_141 + 1<i16>
	di_112 = di_142 + 1<i16> + dx_126 * 2<16>
	ah_120 = ah_120 - 1<8>
	branch ah_120 != 0<8> l16CC_0366
l16CC_0369_1:
	Mem163[es_354:di_142:word16] = Mem148[ds_66:si_141:word16]
	si_141 = si_141 + 2<i16>
	di_142 = di_142 + 2<i16>
	cx_145 = cx_145 - 1<16>
l16CC_0358:
	word16 cx_169 = SEQ(ch_361, al_123)
l16CC_035A:
	ch_361 = SLICE(cx_169, byte, 8) (alias)
	branch cx_169 == 0<16> l16CC_035C
l16CC_035C:
	di_112 = di_112 + dx_126 * 2<16>
	ah_120 = ah_120 - 1<8>
	branch ah_120 != 0<8> l16CC_0358
l16CC_0362:
l16CC_0372:
	ptr32 ds_di_206 = Mem204[fs_40:bx_290 - 4<16> + (si_38 + 0x12<16>):segptr32]
	si_187 = si_38 + 0x12<16>
	selector ds_207 = SLICE(ds_di_206, selector, 16)
	word16 di_208 = SLICE(ds_di_206, word16, 0)
	branch (Mem204[ds_di_206 + 0x1A<16>:word16] & 0x10<16>) == 0<16> l16CC_03E5
l16CC_0380:
	word32 eax_214 = Mem204[ds_di_206 + 0x28<16>:word32]
	word16 ax_220 = SLICE(eax_214, word16, 0)
	branch eax_214 == 0<32> l16CC_039A
l16CC_0389:
	word32 ecx_219 = Mem204[ds_di_206 + 0x24<16>:word32]
	Mem226[SLICE(eax_214 >>u 0x10<32>, word16, 0):ax_220 + 0x24<16>:word32] = ecx_219
	ecx_16_16_250 = SLICE(ecx_219, word16, 16) (alias)
l16CC_039A:
	word32 eax_230 = Mem229[ds_di_206 + 0x24<16>:word32]
	word16 ax_236 = SLICE(eax_230, word16, 0)
	branch eax_230 == 0<32> l16CC_03B4
l16CC_03A3:
	word32 ecx_235 = Mem229[ds_di_206 + 0x28<16>:word32]
	Mem242[SLICE(eax_230 >>u 0x10<32>, word16, 0):ax_236 + 0x28<16>:word32] = ecx_235
	ecx_16_16_250 = SLICE(ecx_235, word16, 16) (alias)
l16CC_03B4:
	word16 ecx_263 = SEQ(ecx_16_16_250, ds_207)
	si_187 = Mem243[16CC:001A:word16]
	word32 ecx_268 = SEQ(ecx_263, di_208)
	ecx_16_16_250 = ecx_263 (alias)
	branch Mem243[fs_40:si_187:word32] != ecx_268 l16CC_03D2
l16CC_03CA:
	Mem272[fs_40:si_187:word32] = Mem243[ds_di_206 + 0x24<16>:word32]
l16CC_03D2:
	branch Mem275[fs_40:si_187 + 4<16>:word32] != ecx_268 l16CC_03E5
l16CC_03DC:
	Mem283[fs_40:si_187 + 4<16>:word32] = Mem275[ds_di_206 + 0x28<16>:word32]
l16CC_03E5:
	di_111 = Mem284[16CC:000C:word16]
	bx_290 = bx_290 - 4<16>
	branch bx_290 != 0<16> l16CC_02EC
l16CC_03F1:
	return
fn16CC_02B2_exit:
l16CC_035A_1:
	Mem343[es_354:di_112:word16] = Mem205[ds_66:si_118:word16]
	si_118 = si_118 + 2<i16>
	di_112 = di_112 + 2<i16>
	cx_169 = cx_169 - 1<16>


void fn16CC_0481(segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0CE0_08FC
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZDO ax bl Top
// Preserved: bp ds ecx edi edx es esi fs gs sp
fn16CC_0481_entry:
l16CC_0481:
	selector ds_91 = SLICE(ptrArg04, selector, 16)
	word16 si_39 = SLICE(ptrArg04, word16, 0) + 0xC8A<16>
	word16 di_43 = 0xC8A<16>
	byte bl_44 = 0x8C<8>
l16CC_04A8:
	word16 cx_45 = 0x4D<16>
l16CC_04AB:
	branch cx_45 == 0<16> l16CC_04AE
l16CC_04AE:
	Mem53[0xA000<16>:di_43:word16] = Mem49[ds_91:si_39:word16]
	si_39 = si_39 + 0xC<16>
	di_43 = di_43 + 0xC<16>
	bl_44 = bl_44 - 1<8>
	branch bl_44 != 0<8> l16CC_04A8
l16CC_04B9:
	return
fn16CC_0481_exit:
l16CC_04AB_1:
	Mem86[0xA000<16>:di_43:word32] = Mem49[ds_91:si_39:word32]
	si_39 = si_39 + 4<i16>
	di_43 = di_43 + 4<i16>
	cx_45 = cx_45 - 1<16>


void fn16CC_04CA(segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0CE0_0170
//      fn0CE0_023E
//      fn0CE0_030C
//      fn0CE0_03D4
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx Top
// Preserved: bp ds ecx edi edx es esi fs gs sp
fn16CC_04CA_entry:
l16CC_04CA:
	word16 ax_41 = Mem35[16CC:000E:word16]
	word16 cx_46 = Mem35[16CC:0010:word16]
	word16 cx_54 = (cx_46 << 6<16>) + SEQ(SLICE(cx_46, byte, 0), 0<8>) + (ax_41 & 0xFFFC<16>)
	word16 dx_45 = (Mem35[16CC:0012:word16] - (ax_41 & 0xFFFC<16>) >>u 2<16>) + 1<16>
	selector ds_120 = SLICE(ptrArg04, selector, 16)
	word16 di_109 = cx_54
	word16 si_108 = SLICE(ptrArg04, word16, 0) + cx_54
	byte bl_115 = SLICE(Mem35[16CC:0014:word16] - Mem35[16CC:0010:word16], byte, 0)
	word16 ax_61 = 0x50<16> - dx_45
l16CC_0520:
	word16 cx_110 = dx_45
l16CC_0522:
	branch cx_110 == 0<16> l16CC_0525
l16CC_0525:
	si_108 = si_108 + (ax_61 << 2<16>)
	di_109 = di_109 + (ax_61 << 2<16>)
	bl_115 = bl_115 - 1<8>
	branch bl_115 != 0<8> l16CC_0520
l16CC_052D:
	Mem77[16CC:000E:word16] = 0x258<16>
	Mem78[16CC:0010:word16] = 0x258<16>
	Mem79[16CC:0012:word16] = 0<16>
	Mem80[16CC:0014:word16] = 0<16>
	return
fn16CC_04CA_exit:
l16CC_0522_1:
	Mem107[0xA000<16>:di_109:word32] = Mem104[ds_120:si_108:word32]
	si_108 = si_108 + 4<i16>
	di_109 = di_109 + 4<i16>
	cx_110 = cx_110 - 1<16>


